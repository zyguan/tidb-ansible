---
- hosts: pd_servers
  tasks:
  - name: gather facts
    setup:
    when:
    - compact_before_bench

- hosts: localhost
  connection: local
  gather_facts: false
  tasks:
  - name: get timestamp
    command: "date +%s"
    register: start_timestamp
  - name: create output directory
    file: path=sysbench_out state=directory
  - name: compact cluster
    shell: "resources/bin/tikv-ctl --pd {{ hostvars[groups.pd_servers[0]].ansible_default_ipv4.address }}:{{ hostvars[groups.pd_servers[0]].pd_client_port }} compact-cluster"
    args:
      chdir: "{{ playbook_dir }}"
    when:
    - compact_before_bench
  - pause:
      minutes: 1
    when:
    - compact_before_bench
    - not prewarm_before_bench

- hosts: sysbench_servers
  tasks:
  - name: run sysbench
    shell:
      cmd: |
        sh -xe >/tmp/sysbench_{{ inventory_hostname }}_{{ hostvars['localhost'].start_timestamp.stdout }}.out 2>&1 <<EOF

        {% if prewarm_before_bench|bool %}
        echo "\$(date) - prewarm start"

        sysbench oltp_common \
          --threads={{ oltp_tables }} \
          --report-interval={{ report_interval }} \
          --db-driver=mysql \
          --mysql-db={{ mysql_db }} \
          --mysql-host={{ mysql_host }} \
          --mysql-port={{ mysql_port }} \
          --mysql-user={{ mysql_user }} \
          --mysql-password={{ mysql_password }} \
          prewarm --tables={{ oltp_tables }} --table-size={{ oltp_table_size }}

        echo "\$(date) - prewarm done"

        sleep 60
        {% endif %}

        echo "\$(date) - bench start"

        sysbench {{ testname }} \
          --threads={{ threads }} \
          --time={{ time }} \
          --report-interval={{ report_interval }} \
          --rand-type={{ rand_type }} \
          --rand-seed=\$RANDOM \
          --db-driver=mysql \
          --mysql-db={{ mysql_db }} \
          --mysql-host={{ mysql_host }} \
          --mysql-port={{ mysql_port }} \
          --mysql-user={{ mysql_user }} \
          --mysql-password={{ mysql_password }} \
          run --tables={{ oltp_tables }} --table-size={{ oltp_table_size }}

        EOF

  - name: gather results
    fetch:
      src: "/tmp/sysbench_{{ inventory_hostname }}_{{ hostvars['localhost'].start_timestamp.stdout }}.out"
      dest: "sysbench_out/{{ out_prefix | default('') }}{{ hostvars['localhost'].start_timestamp.stdout }}_{{ time }}/{{ inventory_hostname }}.out"
      flat: yes
